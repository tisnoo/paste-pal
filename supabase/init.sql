-- Rooms
create table rooms (
  id uuid primary key default gen_random_uuid(),
  host_id text not null,
  created_at timestamptz default now()
);

-- Pre-key bundles (one per room)
create table prekey_bundles (
  room_id uuid references rooms(id) on delete cascade,
  identity_key text not null,
  signed_prekey_id int not null,
  signed_prekey_pub text not null,
  signed_prekey_sig text not null,
  registration_id int not null,
  created_at timestamptz default now(),
  primary key (room_id)
);

-- One-time pre-keys
create table one_time_prekeys (
  room_id uuid references rooms(id) on delete cascade,
  id int not null,
  pub text not null,
  consumed boolean default false,
  consumed_at timestamptz,
  primary key (room_id, id)
);

-- Messages (ciphertext only)
create table messages (
  id bigint generated by default as identity primary key,
  room_id uuid references rooms(id) on delete cascade,
  sender text not null,
  recipient text, -- null = broadcast
  payload text not null, -- base64-encoded ciphertext blob
  created_at timestamptz default now()
);

create or replace function consume_prekey(rid uuid)
returns table (id int, pub text) as $$
declare
  rec record;
begin
  for rec in
    select * from one_time_prekeys
    where room_id = rid and consumed = false
    limit 1
  loop
    update one_time_prekeys
      set consumed = true, consumed_at = now()
      where room_id = rid and id = rec.id;
    return query select rec.id, rec.pub;
    return;
  end loop;
end;
$$ language plpgsql;
